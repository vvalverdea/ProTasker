import { createRequire } from 'node:module';
globalThis['require'] ??= createRequire(import.meta.url);
import{A as v,Q as _,c as h,e as L,ea as k,t as C,v as y,z as p}from"./chunk-QNKP6SCQ.mjs";import{b as l,d as U}from"./chunk-HOM3E74A.mjs";import{b as a,g as T}from"./chunk-WHYOH54Q.mjs";import{e as i}from"./chunk-YJ4N4I6Q.mjs";var H,K,P,I,f=i(()=>{"use strict";T();H="169.254.170.2",K="169.254.170.23",P="[fd00:ec2::23]",I=(e,o)=>{if(e.protocol!=="https:"&&!(e.hostname===H||e.hostname===K||e.hostname===P)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;let n=e.hostname.split("."),r=t=>{let s=parseInt(t,10);return 0<=s&&s<=255};if(n[0]==="127"&&r(n[1])&&r(n[2])&&r(n[3])&&n.length===4)return}throw new a(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`,{logger:o})}}});function E(e){return new h({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((o,[n,r])=>(o[n]=r,o),{}),fragment:e.hash})}async function N(e,o){let r=await p(e.body).transformToString();if(e.statusCode===200){let t=JSON.parse(r);if(typeof t.AccessKeyId!="string"||typeof t.SecretAccessKey!="string"||typeof t.Token!="string"||typeof t.Expiration!="string")throw new a("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:o});return{accessKeyId:t.AccessKeyId,secretAccessKey:t.SecretAccessKey,sessionToken:t.Token,expiration:_(t.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let t={};try{t=JSON.parse(r)}catch{}throw Object.assign(new a(`Server responded with status: ${e.statusCode}`,{logger:o}),{Code:t.Code,Message:t.Message})}throw new a(`Server responded with status: ${e.statusCode}`,{logger:o})}var u=i(()=>{"use strict";T();L();k();v()});var R,w=i(()=>{"use strict";R=(e,o,n)=>async()=>{for(let r=0;r<o;++r)try{return await e()}catch{await new Promise(s=>setTimeout(s,n))}return await e()}});import F from"fs/promises";var x,D,W,b,q,z,S=i(()=>{"use strict";U();y();T();f();u();w();x="AWS_CONTAINER_CREDENTIALS_RELATIVE_URI",D="http://169.254.170.2",W="AWS_CONTAINER_CREDENTIALS_FULL_URI",b="AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE",q="AWS_CONTAINER_AUTHORIZATION_TOKEN",z=(e={})=>{e.logger?.debug("@aws-sdk/credential-provider-http - fromHttp");let o,n=e.awsContainerCredentialsRelativeUri??process.env[x],r=e.awsContainerCredentialsFullUri??process.env[W],t=e.awsContainerAuthorizationToken??process.env[q],s=e.awsContainerAuthorizationTokenFile??process.env[b],c=e.logger?.constructor?.name==="NoOpLogger"||!e.logger?console.warn:e.logger.warn;if(n&&r&&(c("@aws-sdk/credential-provider-http: you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri."),c("awsContainerCredentialsFullUri will take precedence.")),t&&s&&(c("@aws-sdk/credential-provider-http: you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile."),c("awsContainerAuthorizationToken will take precedence.")),r)o=r;else if(n)o=`${D}${n}`;else throw new a(`No HTTP credential provider host provided.
Set AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`,{logger:e.logger});let A=new URL(o);I(A,e.logger);let g=new C({requestTimeout:e.timeout??1e3,connectionTimeout:e.timeout??1e3});return R(async()=>{let d=E(A);t?d.headers.Authorization=t:s&&(d.headers.Authorization=(await F.readFile(s)).toString());try{let m=await g.handle(d);return N(m.response).then(O=>l(O,"CREDENTIALS_HTTP","z"))}catch(m){throw new a(String(m),{logger:e.logger})}},e.maxRetries??3,e.timeout??1e3)}});var Z=i(()=>{S()});export{z as a,Z as b};
