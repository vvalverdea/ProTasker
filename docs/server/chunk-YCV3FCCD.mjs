import { createRequire } from 'node:module';
globalThis['require'] ??= createRequire(import.meta.url);
import{b as E,d as A}from"./chunk-HOM3E74A.mjs";import{b as a,g as y}from"./chunk-WHYOH54Q.mjs";import{a as t,b as s,e as d}from"./chunk-YJ4N4I6Q.mjs";var m,c=d(()=>{"use strict";m=e=>async()=>{e.logger?.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");let{roleArn:o,roleSessionName:r,webIdentityToken:i,providerId:n,policyArns:p,policy:f,durationSeconds:S}=e,{roleAssumerWithWebIdentity:l}=e;if(!l){let{getDefaultRoleAssumerWithWebIdentity:N}=await import("./chunk-4MRM3OS2.mjs");l=N(s(t({},e.clientConfig),{credentialProviderLogger:e.logger,parentClientConfig:e.parentClientConfig}),e.clientPlugins)}return l({RoleArn:o,RoleSessionName:r??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:i,ProviderId:n,PolicyArns:p,Policy:f,DurationSeconds:S})}});import{readFileSync as I}from"fs";var _,T,b,C,g=d(()=>{"use strict";A();y();c();_="AWS_WEB_IDENTITY_TOKEN_FILE",T="AWS_ROLE_ARN",b="AWS_ROLE_SESSION_NAME",C=(e={})=>async()=>{e.logger?.debug("@aws-sdk/credential-provider-web-identity - fromTokenFile");let o=e?.webIdentityTokenFile??process.env[_],r=e?.roleArn??process.env[T],i=e?.roleSessionName??process.env[b];if(!o||!r)throw new a("Web identity configuration not specified",{logger:e.logger});let n=await m(s(t({},e),{webIdentityToken:I(o,{encoding:"ascii"}),roleArn:r,roleSessionName:i}))();return o===process.env[_]&&E(n,"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN","h"),n}});var w=d(()=>{g();c()});export{m as a,C as b,w as c};
